<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>serverless on Barry Blog</title><link>https://barryoo.github.io/blog/serverless/</link><description>Recent content in serverless on Barry Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright © 2023, Barry Chen.</copyright><lastBuildDate>Thu, 03 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://barryoo.github.io/blog/serverless/index.xml" rel="self" type="application/rss+xml"/><item><title>Serverless简单介绍</title><link>https://barryoo.github.io/serverless%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate><guid>https://barryoo.github.io/serverless%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</guid><description>serverless分为FASS BASS PASS 不是不需要服务器, 而是不需要管理服务器.
核心价值 简化运维 弹性伸缩 按需付费
特点 按需加载 事件驱动 应用无状态 自动弹性伸缩 BASS backend as a service 后端即服务 BaaS提供应用依赖的第三方服务, 如数据库, 缓存, 消息队列, 文件存储, 身份认证, 分析, 云函数等, 通常有云服务商提供, 或者第三方提供. 与PaaS的区别是,PaaS需要使用者管理服务的生命周期, 而BasS只需要使用服务.
FASS function as a server 例如:AWS Lambda，Google Cloud Functions，Azure Functions, alyun FC
面临的问题 难以移植，与云服务商绑定 通常serverless是云服务商提供的, 云服务商的serverless产品不兼容. 服务商提供一系列可供快速使用产品作为服务, 接口通常是专有的,不会与其他服务商兼容. 好在，现在有开源的serverless平台, 各云服务商都可使用。或者使用自定义的container运行时,也可以减少对云服务商的依赖. 缺少控制力 由于用户只需关注代码，也意味着用户无法控制运行的底层环境。 除了代码之外的一切，都发生了质变，意味着工作流程的巨大变化。事实上，代码也变了，如果使用专有的serverless框架，那么对于事件的处理方式，与原方式不同。 调试，测试，应用监控，日志，中间件都与以往不同。 serverless框架 serverless devs 阿里云开源, 支持多云, 支持多语言, 支持多平台, 支持多种运行时. serverless framework AWS Lambda，最早被大众所认可的 Serverless 实现。 Azure Functions，来自微软公有云的 Serverless 实现。 OpenWhisk，Apache 社区的开源 Serverless 框架。 Kubeless，基于 Kubernetes 架构实现的开源 Serverless 框架。 Fission，Platform9 推出的开源 Serverless 框架。 OpenFaaS，以容器技术为核心的开源 Serverless 框架。 Fn，来自 Oracle 的开源 Serverless 框架，由原 Iron Functions 团队开发 FASS详解 概念 服务</description></item></channel></rss>