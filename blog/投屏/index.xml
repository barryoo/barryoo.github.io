<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>投屏 on Barry Blog</title><link>https://barryoo.github.io/blog/%E6%8A%95%E5%B1%8F/</link><description>Recent content in 投屏 on Barry Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright © 2023, Barry Chen.</copyright><lastBuildDate>Mon, 06 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://barryoo.github.io/blog/%E6%8A%95%E5%B1%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>投屏相关技术</title><link>https://barryoo.github.io/%E6%8A%95%E5%B1%8F%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://barryoo.github.io/%E6%8A%95%E5%B1%8F%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/</guid><description>DLNA DLNA: 基于有线网络或者无线网络, 支持IPv4/v6, 只能使用http协议. DLNA基于本质上是把播放地址传给其他设备, 所以只能播放多媒体资源. 只需要软件实现, 不需要硬件支持. 有版权的视频,需要视频软件自己实现, 为了避免视频盗版, 投屏时,会生成授权. 看墙外的视频,会有障碍.
miracast 基于WiFi Direct的显示镜像技术. 且只能基于WIFI, 不支持有线网络, 设备间直连, 不需要接入WIFI局域网, 不需要路由器. 可以对UI层管理, 并非所有的UI层都会传输. android原生自带miracast, 但是android10之后原生不再自带miracast, 换成了chromecast. 在不同的设备中, 你会看到不同的命名: 如Wlan display、Wifi display、Miracast、Allshare cast、Mirroring screen、无线显示 台式主机想要使用miracast, 必须使用支持miracast的无线网卡.
Chromecast chromecast是google开发的类似miracast的镜像显示技术. 可以把手机或电脑的浏览器标签页镜像到电视. 电视接收端需要专有硬件支持. google推出了chromecast电视棒, NVIDIA 与google合作推出了nvidia shield tv, SONY电视内置了chromecast. 其他也有三方软件模拟chromecast, 但不是合法的.
airplay Apple独有协议. 支持从IOS或Mac投屏到appleTV, 但是不支持IOS投屏到Mac. 2021年6月, apple升级airplay, 支持IOS投屏到Mac
airplay支持类似DLNA的媒体传输, 也支持类似miracast的镜像. 甚至支持多屏协作, 可以把其他设备作为第二显示器. 例如macbook可以把ipad作为第二显示器.
airplay由apply严格管理, 哪些设备可以在什么场景下投向哪些设备, 而不是像其他投屏协议, 定义好客户端与接收端, 就可以任意投屏. 例如mac可以投屏到ipad, 但是ios不可以.
三方软件airserver, 逆向airPlay协议, 实现了airplay接收端. 只需要在mac上安装接收端软件, iphone/ipad就可以投屏到mac, iphone/ipad不需要安装额外的软件.</description></item></channel></rss>